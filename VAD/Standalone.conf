
;;;;; all the components we require are listed here:
[componentInstances:cComponentManager]
instance[dataMemory].type=cDataMemory
 ////// Enable this, to dump the detected turns as wave files (to the same path as SMILExtract.exe is in)
instance[csvout].type=cCsvSink
instance[turnOutp].type=cWaveSinkCut

 // set printLevelStats=5 to see the feature names in each level for debugging problems with the feature config
printLevelStats=3
nThreads=1
execDebug=0



/*
*************************************************************
     include configuration files
*************************************************************
*/

#### Audio input (look at this file to change the audio sample-rate and sound device, etc.)
\{WaveFileInput.conf}

####################### VAD configuration (choose one ...) ########################

;; The spectra for the VAD
\{IS13_ComParE_specbase.conf}

//////// the  LSTM and GM based VAD from the SEMAINE system
\{lstmVAD.conf}

##################### some config sections in the main file ##########################

;; vad csv output
[csvout:cCsvSink]
reader.dmLevel = vad_VAD_voice
filename = \cm[csv{vad.csv}:vad csv output file]
printHeader = 0
timestamp = 1
number = 0
delimChar = ,

;;; debug outputs
[turnOutp:cWaveSinkCut]
preSil=0.5
reader.dmLevel = frame25
fileBase = output_segments/seg

